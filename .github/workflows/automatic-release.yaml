

---
name: "tag2release"

on:
  push:
    tags:
      - "v*"

jobs:
  tag2release:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v2
      - name: "Build & test"
        run: |
          echo "github.refname: ${{ github.ref_name }}"
          echo "uname:          $(uname -a)"

          set -e
          echo test1 | ./hi.sh test1 green | grep -qs '32m.*test1.*m$'
          ./version-izer.sh -v ./cmd/hi
          ./hi --version
          echo test1 | ./hi    test1 green | grep -qs '32m.*test1.*m$'

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:

          # attempt to grok the tag, if it contains -rc, it's a prerelease
          prerelease: ${{ contains(github.ref_name, '-rc') }}

          # most of these use:plugins that use the github token list it as a
          # secret, which would require you to make a new token and store it in
          # the action secrets ...
          #
          # github_token: ${{ secrets.GITHUB_TOKEN }}
          #
          # But github actually creates a short lived action token for the
          # session that's populated it in the github template variables.
          repo_token: "${{ github.token }}"

  build:
    needs: tag2release
    runs-on: $${{ matrix.items.os }}
    strategy:
      matrix:
        # items is my way of flattening the matrix. I don't want a crossproduct
        # of combinations, I just want a couple list items
        items:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64

    steps:
    - uses: actions/checkout@v2
    - uses: wangyoucao577/go-release-action@v1.24
      with:
        build_command: make release
        # most of these use:plugins that use the github token list it as a
        # secret, which would require you to make a new token and store it in
        # the action secrets ...
        #
        # github_token: ${{ secrets.GITHUB_TOKEN }}
        #
        # But github actually creates a short lived action token for the
        # session that's populated it in the github template variables.
        github_token: ${{ github.token }}

        # The build process produces 'hi', but
        # wangyoucao577/go-release-action@v1.24 would expect 'app-hi' based on
        # the repo name.
        binary_name: hi

        # from the matrix (above)
        goos: ${{ matrix.items.goos }}
        goarch: ${{ matrix.items.goarch }}

        # I'm not convinced you can actually do much authentication with a
        # crypto hash that lacks any signature authority (e.g., X509). But we
        # may as well use one that actually matters if we're going to bother
        # with it at all.
        md5sum: false
        sha256sum: true

        # If I re-create the tag or something, overwrite the asset. I fail to
        # see how this comes up unless I re-run it or something, but it feels
        # right to overwrite.
        overwrite: true
